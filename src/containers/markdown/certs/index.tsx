import React from 'react';
import styled from 'styled-components';
import ReactMarkdown from 'react-markdown';

const Root = styled.div`
	overflow: auto;
	display: flex;
	justify-content: center;
`;

const MarkdownContainer = styled.div`
	padding: 1rem;
	max-width: 600px;
	height: 100%;
`;

const markdown = `
# SSL Certificates

If this is your first time using my web services, and would like to get
rid of the big red screen that screams security issues, you could
download and install my root and intermediate SSL certificates:

- [Root](sidhartaCA.crt)
- [Intermediate](web-services.crt)

## Before you install

Do not go around installing certificates from random pages on the web.
There is a reason the big red security issue screen is so big. Only
do this if you trust the authority that generated these certificates
(in this case, me), and trust that authority's capacity to securely
store that certificate's private key.

I am by no means a security expert, and there is a reasonable chance
that I'll fuck something up in the future. You've been warned.

## How to install the certificates?

Installing the certificates is usually easy: just download both files and double-click them.
When installing a certificate, you may be prompted where should it be installed.
This is important because, if placed on the incorrect folder, your browser may
not be able to use it properly. For the root certificate, select the
"Trusted Root Certificates" option. For the intermediate certificate,
select the "Trusted Intermediate Certificates" option.

## Why do I have to install these certificates?

This is related to HTTPS and security. Your browser needs a signed certificate
to make sure it's talking to the actual server, and not to some malicious server.
Most websites's certificates are generated by trusted organizations, and
your browser is already pre-programmed to trust the certificates generated
by them. My certificates, however, were generated by me, and your browser
doesn't trust me (rightly so!). By installing the two certificates above,
you are basically telling your browser to trust the certificates generated
by them (and therefore, the certificates generated by me).

## Why aren't you using certificates from places like "Let's Encrypt"?
The main reason is because it seems like a bit of a nightmare to automate. I wanted
a system to quickly and easily generate certificates for all my web projects,
without having to visit a third party service, and verify the ownage of my
domain name. The downside to this is that you have to install my certificates
to stop your browser from complaining, but since this isn't really destined to
be used by a broad audience, I think that's OK.

Also, I really wanted to learn how a Certificate Authority works, how to create one,
and how to automate the steps to generate a SSL certificate. It took me a few
hours, and a lot of documentation reading, but I eventualy managed to do it,
and am pretty proud of it :)
`;

type CertsProps = React.PropsWithoutRef<{
}>;

type CertsComponent = React.FunctionComponent<CertsProps>;

const Certs: CertsComponent = ({  }) => {
	return (
		<Root>
			<MarkdownContainer>
				<ReactMarkdown>{markdown}</ReactMarkdown>
			</MarkdownContainer>
		</Root>
	);
}

export default Certs;